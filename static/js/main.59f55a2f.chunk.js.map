{"version":3,"sources":["App.js","index.js"],"names":["Todo","todo","index","completeTodo","undoTodo","deleteTodo","className","isCompleted","for","style","textDecoration","fontStyle","text","type","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","onChange","target","placeholder","App","todos","setTodos","filter","setFilter","newTodos","splice","map","role","length","deleteAllTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59f55a2f.chunk.js","sourcesContent":["import './App.css'\nimport React from 'react'\nimport { useState } from 'react'\n\nfunction Todo({ todo, index, completeTodo, undoTodo, deleteTodo }) {\n  return (\n    <li className=\"todo-item\">\n      <div className={todo.isCompleted ? 'completed' : 'undo'}>\n        <label\n          className=\"form-check-label1\"\n          for=\"{todo.index}\"\n          style={{\n            textDecoration: todo.isCompleted ? 'line-through' : 'none',\n            fontStyle: todo.isCompleted ? 'italic' : ''\n          }}\n        >\n          {todo.text}\n        </label>\n      </div>\n      <div className=\"todo-btn\">\n        <button\n          type=\"button\"\n          className={\n            todo.isCompleted\n              ? 'btn btn-outline-success'\n              : 'btn btn-outline-danger'\n          }\n          onClick={\n            todo.isCompleted ? () => undoTodo(index) : () => completeTodo(index)\n          }\n        >\n          {todo.isCompleted ? 'done' : 'undone'}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-outline-dark\"\n          onClick={() => deleteTodo(index)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  )\n}\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState('')\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!value) return\n    addTodo(value)\n    setValue('')\n  }\n\n  return (\n    <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"What do you want to get done today...\"\n      />\n    </form>\n  )\n}\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { text: 'Finish Todo', isCompleted: true },\n    { text: 'Watch NBA', isCompleted: false },\n    { text: '陪呆呆貓玩耍', isCompleted: false }\n  ])\n  const [filter, setFilter] = useState('all')\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text, isCompleted: false }]\n    setTodos(newTodos)\n  }\n\n  const completeTodo = (index) => {\n    const newTodos = [...todos]\n    newTodos[index].isCompleted = true\n    setTodos(newTodos)\n  }\n\n  const undoTodo = (index) => {\n    const newTodos = [...todos]\n    newTodos[index].isCompleted = false\n    setTodos(newTodos)\n  }\n\n  const deleteTodo = (index) => {\n    const newTodos = [...todos]\n    newTodos.splice(index, 1)\n    setTodos(newTodos)\n  }\n\n  const deleteAllTodo = () => {\n    const newTodos = [...todos]\n    newTodos.splice(0, newTodos.length)\n    setTodos(newTodos)\n  }\n\n  const renderAll = () => {\n    setFilter('all')\n  }\n\n  const renderUndone = () => {\n    setFilter('undone')\n  }\n\n  const renderDone = () => {\n    setFilter('done')\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <header></header>\n\n      <section className=\"todo\">\n        <div className=\"todo-container\">\n          <div className=\"todo-top\">\n            <h1>React Todo App</h1>\n          </div>\n        </div>\n\n        <div className=\"todo-wrapper\">\n          <TodoForm addTodo={addTodo} />\n          <div className=\"todo-content\">\n            <ul className=\"todo-list\">\n              {todos\n                .filter((todo) => {\n                  if (filter === 'all') return todo\n                  if (filter === 'done') return todo.isCompleted\n                  return !todo.isCompleted\n                })\n                .map((todo, index) => (\n                  <Todo\n                    key={index}\n                    index={index}\n                    todo={todo}\n                    undoTodo={undoTodo}\n                    completeTodo={completeTodo}\n                    deleteTodo={deleteTodo}\n                  />\n                ))}\n            </ul>\n            <div className=\"todo-controller\">\n              <div className=\"btn-group me-2\" role=\"group\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-all\"\n                  onClick={renderAll}\n                >\n                  all\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-active\"\n                  onClick={renderUndone}\n                >\n                  active\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-completed\"\n                  onClick={renderDone}\n                >\n                  completed\n                </button>\n              </div>\n\n              <div>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-dark delete-all\"\n                  onClick={() => deleteAllTodo()}\n                >\n                  Clear All\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}